// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Property_Management.DAL.Context;

#nullable disable

namespace Property_Management.DAL.Migrations
{
    [DbContext(typeof(PMSDbContext))]
    [Migration("20230323134656_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Property_Management.DAL.Entities.LeaseDetail", b =>
                {
                    b.Property<string>("LeaseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Lease_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Lease_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Lease_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Lease_Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("Monthly_Rent")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PropertyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Security_Deposit_Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tenant_Property_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tenant_Unit_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Upcoming_Tenant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LeaseId", "TenantId");

                    b.HasIndex("PropertyId");

                    b.ToTable("LeaseDetails");
                });

            modelBuilder.Entity("Property_Management.DAL.Entities.LeasePayment", b =>
                {
                    b.Property<string>("LeasePaymentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("LateFees")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LeaseDetailsLeaseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LeaseDetailsTenantId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LeaseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PaidBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("PaymentAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LeasePaymentId");

                    b.HasIndex("PaidBy");

                    b.HasIndex("LeaseDetailsLeaseId", "LeaseDetailsTenantId");

                    b.HasIndex(new[] { "LeaseId" }, "IX_LeaseId")
                        .IsUnique();

                    b.HasIndex(new[] { "LeaseId" }, "IX_LeasePaymentId")
                        .IsUnique();

                    b.HasIndex(new[] { "LeaseId" }, "IX_PaidBy")
                        .IsUnique();

                    b.ToTable("leasePayments");
                });

            modelBuilder.Entity("Property_Management.DAL.Entities.MaintenanceRequest", b =>
                {
                    b.Property<string>("RequestId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateLogged")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoggedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MRNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportedToStaffId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RequestId");

                    b.HasIndex("LoggedBy");

                    b.ToTable("MaintenanceRequests");
                });

            modelBuilder.Entity("Property_Management.DAL.Entities.Manager", b =>
                {
                    b.Property<string>("ManagerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManagerId");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("Property_Management.DAL.Entities.Property", b =>
                {
                    b.Property<string>("PropertyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PropertyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("managerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("propertyTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PropertyId");

                    b.ToTable("Propertys");
                });

            modelBuilder.Entity("Property_Management.DAL.Entities.Role", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Property_Management.DAL.Entities.TenantDetail", b =>
                {
                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TenantId");

                    b.HasIndex("PropertyId");

                    b.HasIndex(new[] { "Email" }, "IX_Email")
                        .IsUnique();

                    b.HasIndex(new[] { "TenantId" }, "IX_TenantId")
                        .IsUnique();

                    b.ToTable("TenantDetails");
                });

            modelBuilder.Entity("Property_Management.DAL.Entities.LeaseDetail", b =>
                {
                    b.HasOne("Property_Management.DAL.Entities.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Property_Management.DAL.Entities.LeasePayment", b =>
                {
                    b.HasOne("Property_Management.DAL.Entities.TenantDetail", "TenantDetails")
                        .WithMany()
                        .HasForeignKey("PaidBy");

                    b.HasOne("Property_Management.DAL.Entities.LeaseDetail", "LeaseDetails")
                        .WithMany()
                        .HasForeignKey("LeaseDetailsLeaseId", "LeaseDetailsTenantId");

                    b.Navigation("LeaseDetails");

                    b.Navigation("TenantDetails");
                });

            modelBuilder.Entity("Property_Management.DAL.Entities.MaintenanceRequest", b =>
                {
                    b.HasOne("Property_Management.DAL.Entities.TenantDetail", "TenantDetails")
                        .WithMany()
                        .HasForeignKey("LoggedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TenantDetails");
                });

            modelBuilder.Entity("Property_Management.DAL.Entities.TenantDetail", b =>
                {
                    b.HasOne("Property_Management.DAL.Entities.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });
#pragma warning restore 612, 618
        }
    }
}
